{"_type":"export","__export_format":4,"__export_date":"2022-02-02T22:58:40.889Z","__export_source":"insomnia.desktop.app:v2021.7.2","resources":[{"_id":"req_e321c858384c471cad7874eb2fcb3afa","parentId":"wrk_1d901ddcb2314e36864da6b29509ff24","modified":1643842368588,"created":1643825728625,"url":"{{ _.server }}/accounts","name":"Accounts","description":"This method returns a list of all registered accounts in the bank's system. Adding '/information' to the base link you can have account informations such as its balance, owner's name or initial deposit. It is possible to use:\n\n- **ID**: an integer bigger than zero number contained at account registers or;\n- **Name**: a string parameters contained at account register.\n\n**EXAMPLE:**\n\nIf you want account informations about account ID 2:\n{{ _.server }}/accounts/2\n\nAnd if you want the account informations of _Arisha Barron's_ account:\n{{ _.server }}/accounts/Arisha%20Barron\n\n```response:200\n{\n    \"id\": {\n        \"1\": {\n            \"name\": \"Arisha Barron\",\n            \"initial_deposit\": 1000.0,\n            \"balance\": 1520.0\n        },\n        \"2\": {\n            \"name\": \"Branden Gibson\",\n            \"initial_deposit\": 1390.0,\n            \"balance\": 429.0\n        },\n        \"3\": {\n            \"name\": \"Rhonda Church\",\n            \"initial_deposit\": 488.8,\n            \"balance\": 592.0\n        }\n    }\n}\n```","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1643825940716,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"wrk_1d901ddcb2314e36864da6b29509ff24","parentId":null,"modified":1643841820045,"created":1643739914790,"name":"Bank API","description":"Bank API is a system developed to simulate a traditional bank system. It is composed by list of accounts and transfers history.\nYou can POST new accounts giving as parameters the customer name and its initial deposit. You also can POSt a transfer based on customers ID's. You'll just send the ID from who is transfering, ID of the one who's receiving the money and how much money will be transfered. This event will automatically append to transfer history database and generate a transfer ID, which is very important to maintain control and data to facilitate searching.\nTalking about searching, it is possible to search some informations like:\n\n- Account initial deposit and balance giving ID;\n- Account initial deposit and balance giving the owner's name;\n- Account history transfers giving ID;\n- Account history transfers giving name;\n- Account balance transfers giving ID;\n- Account balance transfers giving name;\n\nAll of this can be returned by adding '/information' to the base link.\n\nHere is an example: If you want to know how much money is in account with ID 4, you just want to apply GET at:\n{{ _.server }}/balance/4\n\nAnd that's it! It will return the account balance.\n\nMore detailed information is given by each method description. Enjoy it!","scope":"collection","_type":"workspace"},{"_id":"req_9dc0f3631ad84c06be8731a197a916ab","parentId":"wrk_1d901ddcb2314e36864da6b29509ff24","modified":1643842677230,"created":1643825768921,"url":"{{ _.server }}/accounts","name":"New account","description":"This method post a new customer to the API. Its parameters are _name_ and _initial deposit_ and it will return the new customer's ID.\n\n```response:200\n{\n    \"id\": 0\n}\n```","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"name\": \"string\", \n\t\"initial_deposit\": 0.0\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_48fe214112ab47fab69229a3eddf5dc7"}],"authentication":{},"metaSortKey":-1643825940666,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_57dd55658afc4501bb4f6153351d4e30","parentId":"wrk_1d901ddcb2314e36864da6b29509ff24","modified":1643842394798,"created":1643825846281,"url":"{{ _.server }}/transfers","name":"Transfer","description":"This method returns a list of all registered transfers in the bank's system. Adding '/information' to the base link you can have transfers informations such as ID of the one who made transfer, ID of the receiver, how much money it has been transfered and the transfer ID. It is possible to use:\n\n- **ID**: an integer bigger than zero number contained at account registers or;\n- **Name**: a string parameters contained at account register.\n\n\n**EXAMPLE:**\n\nIf you want transfers informations about account ID 2:\n{{ _.server }}/transfers/2\n\nAnd if you want the transfer informations of _Arisha Barron's_ account:\n{{ _.server }}/transfers/Arisha%20Barron\n\n```response:200\n{\n    \"id\": {\n        \"1\": {\n            \"name\": \"Arisha Barron\",\n            \"initial_deposit\": 1000.0,\n            \"balance\": 1520.0\n        },\n        \"2\": {\n            \"name\": \"Branden Gibson\",\n            \"initial_deposit\": 1390.0,\n            \"balance\": 429.0\n        },\n        \"3\": {\n            \"name\": \"Rhonda Church\",\n            \"initial_deposit\": 488.8,\n            \"balance\": 592.0\n        }\n\t\t}\n}\n```","method":"GET","body":{},"parameters":[{"id":"pair_d72d527f5c2347b4a92964084faf54b7","name":"id","value":"1","description":""}],"headers":[],"authentication":{},"metaSortKey":-1643825903561.5,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_2e4a055cd149403d9c27fa85f8c0e62f","parentId":"wrk_1d901ddcb2314e36864da6b29509ff24","modified":1643842676604,"created":1643825866457,"url":"{{ _.server }}/transfers","name":"New transfer","description":"This method post a new transfer to the API database. Its parameters are account ID of the one that is transfering, account ID of the one who's receiving and how much money will be envolved. It will return transfers ID and both new balances of transaction accounts.\n\n```response:200\n{\n\t\"transfer_id\": 0,\n\t\"from_id_new_balance\": 0.0,\n\t\"to_id_new_balance\": 0.0\n}\n```","method":"POST","body":{"mimeType":"application/json","text":"{\n\t\"from_id\": 0, \n\t\"to_id\": 0, \n\t\"transfer_value\": 0.0\n}"},"parameters":[],"headers":[{"name":"Content-Type","value":"application/json","id":"pair_4d043a6d20b44e2eab709d63f62c90b6"}],"authentication":{},"metaSortKey":-1643825866457,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"req_87c40c0579a74485a60830e959c0aeda","parentId":"wrk_1d901ddcb2314e36864da6b29509ff24","modified":1643842414468,"created":1643825940616,"url":"{{ _.server }}/balance","name":"Balance","description":"This method returns account balance to account. It is important to remember that one costumer can have as many accounts as he wants, so, when it happens, the method returns a list of all account balances separed by id. Adding '/information' to the base link you can have account balances to the account you want. It is possible to use:\n\n- **ID**: an integer bigger than zero number contained at account registers or;\n- **Name**: a string parameters contained at account register.\n\n**EXAMPLE:**\n\nIf you want account balance about account ID 2:\n{{ _.server }}/balance/2\n\nAnd if you want the account balance of _Arisha Barron's_ account:\n{{ _.server }}/balance/Arisha%20Barron\n\n```response:200\n{\n    \"balance\": 0.0\n}\n```","method":"GET","body":{},"parameters":[],"headers":[],"authentication":{},"metaSortKey":-1643825846231,"isPrivate":false,"settingStoreCookies":true,"settingSendCookies":true,"settingDisableRenderRequestBody":false,"settingEncodeUrl":true,"settingRebuildPath":true,"settingFollowRedirects":"global","_type":"request"},{"_id":"env_ea7fccd5796f385a5192c6ead758210373e35c9f","parentId":"wrk_1d901ddcb2314e36864da6b29509ff24","modified":1643842679955,"created":1643739914796,"name":"Base Environment","data":{"server":"http://127.0.0.1:5000"},"dataPropertyOrder":{"&":["server"]},"color":null,"isPrivate":false,"metaSortKey":1643739914796,"_type":"environment"},{"_id":"jar_ea7fccd5796f385a5192c6ead758210373e35c9f","parentId":"wrk_1d901ddcb2314e36864da6b29509ff24","modified":1643739914798,"created":1643739914798,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_6b55587c69554f3e9886ea90237bad3f","parentId":"wrk_1d901ddcb2314e36864da6b29509ff24","modified":1643739914792,"created":1643739914792,"fileName":"condoconta_challenge","contents":"","contentType":"yaml","_type":"api_spec"}]}